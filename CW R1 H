#pragma region VEXcode Generated Robot Configuration
// Make sure all required headers are included.
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <math.h>
#include <string.h>


#include "vex.h"

using namespace vex;

// Brain should be defined by default
brain Brain;


// START IQ MACROS
#define waitUntil(condition) \
do { \
wait(5, msec); \
} while (!(condition))

#define repeat(iterations) \
for (int iterator = 0; iterator < iterations; iterator++)
// END IQ MACROS


// Robot configuration code.
inertial BrainInertial = inertial();
motor LeftDriveSmart = motor(PORT1, 1, false);
motor RightDriveSmart = motor(PORT2, 1, true);
drivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 200, 173, 76, mm, 1);
distance Distance4 = distance(PORT4);
motor Volantw = motor(PORT6, true);

#pragma endregion VEXcode Generated Robot Configuration
// Include the IQ Library
#include "vex.h"

// Allows for easier use of the VEX Library
using namespace vex;

float myVariable;

// "when started" hat block
int whenStarted1() {
while (true) {
Drivetrain.drive(forward);
Drivetrain.setDriveVelocity(100.0, percent);
Volantw.setVelocity(100.0, percent);
Volantw.setPosition(0.0, degrees);
if (Distance4.objectDistance(mm) < 200.0) {
Drivetrain.drive(reverse);
wait(2.0, seconds);
Drivetrain.drive(forward);
Volantw.spinFor(reverse, 30.0, degrees, true);
wait(2.0, seconds);
Volantw.spinFor(forward, 30.0, degrees, true);
}
wait(20, msec);
}
return 0;
}


{
whenStarted1();
} 
