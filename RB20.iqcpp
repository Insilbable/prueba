{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\ndistance SI = distance(PORT5);\ndistance SC = distance(PORT3);\ndistance SD = distance(PORT11);\nmotor LeftDriveSmart = motor(PORT1, 1, false);\nmotor RightDriveSmart = motor(PORT12, 1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 200, 173, 76, mm, 1);\nmotor VOLANTE = motor(PORT6, true);\ncolorsensor COLOR = colorsensor(PORT4);\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable, giro, grados;\n\nint mathRandomInt(float a, float b) {\n  if (a > b) {\n    // Swap a and b to ensure a is smaller.\n    float c = a;\n    a = b;\n    b = c;\n  }\n  int tmpA = static_cast<int>(a);\n  int tmpB = static_cast<int>(b);\n  int r = tmpA + rand() / (RAND_MAX / (tmpB - tmpA + 1));\n  return r;\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  while (true) {\n    Drivetrain.drive(forward);\n    Drivetrain.setDriveVelocity(100.0, percent);\n    if (SC.objectDistance(mm) < 280.0) {\n      giro = static_cast<float>(mathRandomInt(1.0, 1.0));\n      grados = static_cast<float>(mathRandomInt(25.0, 25.0));\n      if (giro == 1.0) {\n        VOLANTE.setVelocity(100.0, percent);\n        VOLANTE.spinFor(reverse, grados, degrees, true);\n        wait(0.5, seconds);\n        VOLANTE.spinFor(forward, 40.0, degrees, true);\n        wait(0.5, seconds);\n        VOLANTE.spinFor(reverse, grados, degrees, true);\n      }\n    }\n    if (SI.objectDistance(mm) < 100.0) {\n      giro = static_cast<float>(mathRandomInt(1.0, 2.0));\n      grados = static_cast<float>(mathRandomInt(25.0, 25.0));\n      if (giro == 1.0) {\n        VOLANTE.setVelocity(100.0, percent);\n        VOLANTE.spinFor(reverse, grados, degrees, true);\n        wait(0.5, seconds);\n        VOLANTE.spinFor(forward, 40.0, degrees, true);\n        wait(0.5, seconds);\n        VOLANTE.spinFor(reverse, grados, degrees, true);\n      }\n    }\n    if (SD.objectDistance(mm) < 100.0) {\n      giro = static_cast<float>(mathRandomInt(1.0, 1.0));\n      grados = static_cast<float>(mathRandomInt(25.0, 25.0));\n      if (giro == 1.0) {\n        VOLANTE.setVelocity(100.0, percent);\n        VOLANTE.spinFor(forward, grados, degrees, true);\n        wait(0.5, seconds);\n        VOLANTE.spinFor(reverse, 40.0, degrees, true);\n        wait(0.5, seconds);\n        VOLANTE.spinFor(forward, grados, degrees, true);\n      }\n    }\n  wait(20, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // initialize the random number system\n  srand(Brain.Timer.system());\n\n  whenStarted1();\n}","textLanguage":"cpp","rconfig":[{"port":[5],"name":"SI","customName":true,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22},{"port":[3],"name":"SC","customName":true,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22},{"port":[11],"name":"SD","customName":true,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22},{"port":[1,12,null],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[6],"name":"VOLANTE","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"IZQ","rev":"DER"},"triportSourcePort":22},{"port":[4],"name":"COLOR","customName":true,"deviceType":"Color","deviceClass":"colorsensor","setting":{},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"target":"Physical"}